sbinom(5, size = 10, prob = 0.5)
dbinom(5, size = 10, prob = 0.5)
dbinom(4, size = 12, prob = 0.2)
pbinom(4, size = 12, prob = 0.2)
pbinom(4, size = 12, prob = 0.2, lower = F)
rbinom(100, 20, 0.3)
a<-rbinom(100, 20, 0.3)
mean(a)
dmultinom(c(1,2,1), prob=c(0.25,0.5,0.25))
a<-rmultinom(10, size = 12, prob= c(0.1,0.2,0.8))
a
men(a)
mean(a)
pbinom(24, n, p)
n <-60
p<-0.4
pbinom(24, n, p)
dbinom(24, n, p)
pbinom(24, n, p)
pbinom(30, n, p, lower = F)
pbinom(30,n,p)
pbinom(30,n,p)-pbinom(20,n,p)
pbinom(20,n,p)
pbinom(30,n,p, lower = F)-pbinom(20,n,p, lower = F)
pbinom(20,n,p, lower = F)-pbinom(30,n,p, lower = F)
pbinom(20,n,p)
dbinom(14, n, p)
p<-0.00003
n <-600000
dbinom(1, n, p)
dpois(16, lambda = 12)
rpois(100, 3)
rpois(100, 2)
rpois(100, 2)
mean(rpois(100, 2))
mean(rpois(100, 2))
mean(rpois(100, 2))
mean(rpois(100, 2))
qpois(.95, 3)
dpois(6, 3)
100-5.5
qpois(.945, 0)
qpois(.945,1)
qpois(.945,2)
qpois(1-0.055,2)
qpois(0.945,2)
library(help=stats)
dnorm(-1.1)
x<-seq(-4,4,0.1)
plot(x)
plot(x, dnorm(x), type = "l")
plot(x, dnorm(x), type = "l")
plot(x, dnorm(x,2,0.25), type = "l")
library()gplot2
library(gplot2)
library(ggplot2)
ggplot()+geom_line(aes=(x, dnorm(x,2,0.25), type = "l"))
ggplot()+geom_line(aes=(x=x, y=dnorm(x,2,0.25)))
a<-seq(-4,4,0.1)
ggplot()+geom_line(aes=(x=a, y=dnorm(a,2,0.25)))
a<-seq(-4,4,0.1)
library(ggplot2)
ggplot()+geom_line(aes(x=a  y=dnorm(a,2,0.25)))
ggplot()+geom_line(aes(x=a , y=dnorm(a,2,0.25)))
pnorm(89, 72, 15.2)-pnorm(65, 72, 15.2)
qnorm(.975)
samplenorm<-rnorm(100)
samplenorm
hist(samplenorm)
sd(samplenorm)
mean(samplenorm)
pnorm(185, 174.3,7.6)
pnorm((185-174)/7.6)
(185-174)/7.6
(155-174)/7.6
a<-(155-174)/7.6
b<-(185-174)/7.6
pnorm(185, 174.3, 7.6)-pnorm(155, 174.3, 7.6)
pnorm(a)-pnorm(b)
qqnorm(samplenorm)
qqline(samplenorm)
samplenorm(rnorm(1000))
samplenorm<-(rnorm(1000))
qqline(samplenorm)
qqnorm(samplenorm)
qqline(samplenorm)
classTraits <- read.table('http://mscbioinformatics.uab.cat/base/documents/bioinformaticsintranet1718/databla/CLASS_TRAITS.txt', header = TRUE)
classTraits
qqnorm(classTraits$height)
qqline()
qqline(classTraits$height)
link <- 'http://mscbioinformatics.uab.cat/base/documents/bioinformaticsintranet1718/summary_human_genome2015_10_18D22_6.txt'
header<-read.table(link, nrows = 1, stringsAsFactors = F)
t<-read.table(link, skip = 1 , stringsAsFactors = F)
colnames(t)<-c(  as.character(header[1:4]), "INSDC", as.character(header[5:12]))
t[26,2:13]<-c(as.character(t[26,3:13]), as.character(t[27,1]))
t<-t[1:26,]
## DELIVERABLE
# 1. Exploratory data analysis (apply descriptive statistics and graphs for one o more
#  variables) of non-trivial variables of the genome table.
link <- 'http://mscbioinformatics.uab.cat/base/documents/bioinformaticsintranet1718/summary_human_genome2015_10_18D22_6.txt'
header<-read.table(link, nrows = 1, stringsAsFactors = F)
# there is a missing column name, as we can see in https://www.ncbi.nlm.nih.gov/genome/51?genome_assembly_id=214366
t<-read.table(link, skip = 1 , stringsAsFactors = F)
colnames(t)<-c(  as.character(header[1:4]), "INSDC", as.character(header[5:12]))
# Also, the last row has a typo
t[26,2:13]<-c(as.character(t[26,3:13]), as.character(t[27,1]))
t<-t[1:26,]
View(t)
t[,]
t[1,]
t[,6:13]
head(t[,6:13])
as.numeric(t[,6:13])
t$Pseudogene<-as.numeric(t$Pseudogene)
View(t)
apply(t[,6:12], 2, function(x){as.numeric(x)})
apply(t[,6:12], 2, function(x){x<-as.numeric(x)})
t[,6:12]<-apply(t[,6:12], 2, function(x){as.numeric(x)})
# 1. Exploratory data analysis (apply descriptive statistics and graphs for one o more
#  variables) of non-trivial variables of the genome table.
link <- 'http://mscbioinformatics.uab.cat/base/documents/bioinformaticsintranet1718/summary_human_genome2015_10_18D22_6.txt'
header<-read.table(link, nrows = 1, stringsAsFactors = F)
# there is a missing column name, as we can see in https://www.ncbi.nlm.nih.gov/genome/51?genome_assembly_id=214366
t<-read.table(link, skip = 1 , stringsAsFactors = F)
colnames(t)<-c(  as.character(header[1:4]), "INSDC", as.character(header[5:12]))
# Also, the last row has a typo
t[26,2:13]<-c(as.character(t[26,3:13]), as.character(t[27,1]))
t<-t[1:26,]
4.5
4,5
gsub(",", ".", t[,6:12])
# 1. Exploratory data analysis (apply descriptive statistics and graphs for one o more
#  variables) of non-trivial variables of the genome table.
link <- 'http://mscbioinformatics.uab.cat/base/documents/bioinformaticsintranet1718/summary_human_genome2015_10_18D22_6.txt'
header<-read.table(link, nrows = 1, stringsAsFactors = F)
# there is a missing column name, as we can see in https://www.ncbi.nlm.nih.gov/genome/51?genome_assembly_id=214366
t<-read.table(link, skip = 1 , stringsAsFactors = F)
colnames(t)<-c(  as.character(header[1:4]), "INSDC", as.character(header[5:12]))
# Also, the last row has a typo
t[26,2:13]<-c(as.character(t[26,3:13]), as.character(t[27,1]))
t<-t[1:26,]
t[,6:12]<-gsub(",", ".", t[,6:12])
t[,6:12]<-apply(t[,6:12], 2, function(x){
gsub(",",".",x)
as.numeric(x)
})
apply(t[,6:12], 2, function(x){
gsub(",",".",x)
# as.numeric(x)
})
# 1. Exploratory data analysis (apply descriptive statistics and graphs for one o more
#  variables) of non-trivial variables of the genome table.
link <- 'http://mscbioinformatics.uab.cat/base/documents/bioinformaticsintranet1718/summary_human_genome2015_10_18D22_6.txt'
header<-read.table(link, nrows = 1, stringsAsFactors = F)
# there is a missing column name, as we can see in https://www.ncbi.nlm.nih.gov/genome/51?genome_assembly_id=214366
t<-read.table(link, skip = 1 , stringsAsFactors = F)
colnames(t)<-c(  as.character(header[1:4]), "INSDC", as.character(header[5:12]))
# Also, the last row has a typo
t[26,2:13]<-c(as.character(t[26,3:13]), as.character(t[27,1]))
t<-t[1:26,]
apply(t[,6:12], 2, function(x){
gsub(",",".",x)
# as.numeric(x)
})
apply(t[,6:12], 2, function(x){
gsub(",",".",x)
as.numeric(x)
})
apply(t[,6:12], 2, function(x){
x<-gsub(",",".",x)
as.numeric(x)
})
t[,6:12]<-apply(t[,6:12], 2, function(x){
x<-gsub(",",".",x)
as.numeric(x)
})
# 1. Exploratory data analysis (apply descriptive statistics and graphs for one o more
#  variables) of non-trivial variables of the genome table.
link <- 'http://mscbioinformatics.uab.cat/base/documents/bioinformaticsintranet1718/summary_human_genome2015_10_18D22_6.txt'
header<-read.table(link, nrows = 1, stringsAsFactors = F)
# there is a missing column name, as we can see in https://www.ncbi.nlm.nih.gov/genome/51?genome_assembly_id=214366
t<-read.table(link, skip = 1 , stringsAsFactors = F)
colnames(t)<-c(  as.character(header[1:4]), "INSDC", as.character(header[5:12]))
# Also, the last row has a typo
t[26,2:13]<-c(as.character(t[26,3:13]), as.character(t[27,1]))
t<-t[1:26,]
t[25,13]
t[,6:12]<-apply(t[,6:12], 2, function(x){
x<-gsub(",",".",x)
as.numeric(x)
})
View(t)
t[,6:12]<-apply(t[,6:12], 2, function(x){
x<-gsub(",",".",x)
x<-gsub("-", NA, x)
as.numeric(x)
})
link <- 'http://mscbioinformatics.uab.cat/base/documents/bioinformaticsintranet1718/summary_human_genome2015_10_18D22_6.txt'
header<-read.table(link, nrows = 1, stringsAsFactors = F)
# there is a missing column name, as we can see in https://www.ncbi.nlm.nih.gov/genome/51?genome_assembly_id=214366
t<-read.table(link, skip = 1 , stringsAsFactors = F)
colnames(t)<-c(  as.character(header[1:4]), "INSDC", as.character(header[5:12]))
# Also, the last row has a typo
t[26,2:13]<-c(as.character(t[26,3:13]), as.character(t[27,1]))
t<-t[1:26,]
t[,6:12]<-apply(t[,6:12], 2, function(x){
# x<-gsub(",",".",x)
x<-gsub("-", NA, x)
as.numeric(x)
})
t[,6:12]<-apply(t[,6:12], 2, function(x){
x<-gsub(",",".",x)
as.numeric(x)
})
View(t)
View(t)
t[25,13]
t[25,13]<-NA
link <- 'http://mscbioinformatics.uab.cat/base/documents/bioinformaticsintranet1718/summary_human_genome2015_10_18D22_6.txt'
header<-read.table(link, nrows = 1, stringsAsFactors = F)
# there is a missing column name, as we can see in https://www.ncbi.nlm.nih.gov/genome/51?genome_assembly_id=214366
t<-read.table(link, skip = 1 , stringsAsFactors = F)
colnames(t)<-c(  as.character(header[1:4]), "INSDC", as.character(header[5:12]))
# Also, the last row has a typo
t[26,2:13]<-c(as.character(t[26,3:13]), as.character(t[27,1]))
t<-t[1:26,]
# The variables are transformed to numeric
t[,6:12]<-apply(t[,6:12], 2, function(x){
x<-gsub(",",".",x)
as.numeric(x)
})
t[25,13]<-NA
# 1. Exploratory data analysis (apply descriptive statistics and graphs for one o more
#  variables) of non-trivial variables of the genome table.
link <- 'http://mscbioinformatics.uab.cat/base/documents/bioinformaticsintranet1718/summary_human_genome2015_10_18D22_6.txt'
header<-read.table(link, nrows = 1, stringsAsFactors = F)
# there is a missing column name, as we can see in https://www.ncbi.nlm.nih.gov/genome/51?genome_assembly_id=214366
t<-read.table(link, skip = 1 , stringsAsFactors = F)
colnames(t)<-c(  as.character(header[1:4]), "INSDC", as.character(header[5:12]))
# Also, the last row has a typo
t[26,2:13]<-c(as.character(t[26,3:13]), as.character(t[27,1]))
t<-t[1:26,]
# The variables are transformed to numeric
t[,6:12]<-apply(t[,6:12], 2, function(x){
x<-gsub(",","",x)
as.numeric(x)
})
t[25,13]<-NA
# 1. Exploratory data analysis (apply descriptive statistics and graphs for one o more
#  variables) of non-trivial variables of the genome table.
link <- 'http://mscbioinformatics.uab.cat/base/documents/bioinformaticsintranet1718/summary_human_genome2015_10_18D22_6.txt'
header<-read.table(link, nrows = 1, stringsAsFactors = F)
# there is a missing column name, as we can see in https://www.ncbi.nlm.nih.gov/genome/51?genome_assembly_id=214366
t<-read.table(link, skip = 1 , stringsAsFactors = F)
colnames(t)<-c(  as.character(header[1:4]), "INSDC", as.character(header[5:12]))
# Also, the last row has a typo
t[26,2:13]<-c(as.character(t[26,3:13]), as.character(t[27,1]))
t<-t[1:26,]
# The variables are transformed to numeric
t[,6:13]<-apply(t[,6:13], 2, function(x){
x<-gsub(",","",x)
as.numeric(x)
})
sapply(t[,6:13], summary)
View(t)
complete_genome_size<-sum(as.numeric(t$`Size_(Mb)`)
humangen$propsize = humangen$Size_.Mb./complete_genome_size
GCglobal<-sum((humangen$GC.*humangen$Size_.Mb.)/complete_genome_size)
sapply(t[,6:13], summary)
library(ggplot2)
library(gridExtra)
p1<-ggplot(classTraits)+geom_boxplot(aes(x = gender , y = height , fill = gender))+labs(title  ="Height analysis" , y = "Height (cm)", x = "Gender")+ theme(plot.title = element_text(hjust = 0.5), legend.position = 'none')
p2<-ggplot(classTraits)+geom_boxplot(aes(x = gender , y = weight,fill = gender))+labs(title = "Weight analysis", y = "Weight (kg)", x = "Gender")+ theme(plot.title = element_text(hjust = 0.5))
grid.arrange(p1,p2, nrow = 1)
# Distribution of categorical variables, The NAs are not counted in the proportions
sapply(classTraits[,c("gender", "degree", "ABO", "Rh", "hair_color", "eye_color", "tongue_rolling")], FUN = function(x){table(x)/sum(table(x))})
# Bi variate analysis on continuous variables, with both height and weight recorded
p<-ggplot(classTraits, aes(height, weight, color = gender)) + geom_point()
p3 <-p+ facet_grid(.~gender)
grid.arrange(p3, p, ncol = 1)
var(classTraits[,c("height", "weight")], use= 'complete.obs')
cor(classTraits[,c("height", "weight")], use= 'complete.obs')
# Bi variate analysis deleting outliers
subset<-classTraits[which ((classTraits$gender == "M" & classTraits$height %in% c(160:190) & classTraits$weight < 91) | (classTraits$gender == "F" & classTraits$weight<80)),c("height", "weight")]
var(subset)
cor(subset)
p5<-ggplot(classTraits, aes(x = eye_color))+geom_bar( aes(fill = hair_color ), position = 'stack')
p5
complete_genome_size<-sum(as.numeric(t$`Size_(Mb)`))
gensize<-sum(as.numeric(t$`Size_(Mb)`))
humangen$Rel_size = t$`Size_(Mb)`/gensize
t$Rel_size = t$`Size_(Mb)`/gensize
t$Rel_GC*t$Rel_size)/gensize
t$Rel_GC*t$Rel_size/gensize
t$`GC%`*t$Rel_size/gensize
t$`GC%`*t$Rel_size
sum(t$`GC%`*t$Rel_size)
t$`GC%`*t$Rel_size
t$GC_apport<-sum(t$`GC%`*t$Rel_size)
sum(t$GC_apport)
t$GC_apport<-t$`GC%`*t$Rel_size
sum(t$GC_apport)
t$GC_apport<-t$`GC%`*t$Rel_size
sum(t$GC_apport)
install.packages("Weighted.Desc.Stat")
library(Weighted.Desc.Stat)
sum(Rel_size)
sum(t$Rel_size)
w.mean(t$`GC%`, t$Rel_size)
sum(t$GC_apport)
summary(t$Protein)
apply(t[6:12], 2, function(x){
summary(x)
w.mean(x, t$Rel_size)
})
library(ggplot2)
apply(t[6:12], 2, function(x){
summary(x)
# w.mean(x, t$Rel_size)
})
apply(t[6:12], 2, function(x){
# summary(x)
w.mean(x, t$Rel_size)
})
apply(t[6:13], 2, function(x){
# summary(x)
x[which(is.na(x)== FALSE)]
# w.mean(x, t$Rel_size[])
})
apply(t[6:13], 2, function(x){
summary(x)
w.mean(x[which(is.na(x)== FALSE)], t[which(is.na(x)== FALSE),"Rel_size"])
})
apply(t[6:13], 2, function(x){
summary(x)
m<-w.mean(x[which(is.na(x)== FALSE)], t[which(is.na(x)== FALSE),"Rel_size"])
})
apply(t[6:13], 2, function(x){
print(summary(x))
m<-w.mean(x[which(is.na(x)== FALSE)], t[which(is.na(x)== FALSE),"Rel_size"])
})
apply(t[6:13], 2, function(x){
cat(summary(x))
w.mean(x[which(is.na(x)== FALSE)], t[which(is.na(x)== FALSE),"Rel_size"])
})
apply(t[6:13], 2, function(x){
print(summary(x))
w.mean(x[which(is.na(x)== FALSE)], t[which(is.na(x)== FALSE),"Rel_size"])
})
apply(t[6:13], 2, function(x){
print x
print(summary(x))
w.mean(x[which(is.na(x)== FALSE)], t[which(is.na(x)== FALSE),"Rel_size"])
})
apply(t[6:13], 2, function(x){
print (x)
print(summary(x))
w.mean(x[which(is.na(x)== FALSE)], t[which(is.na(x)== FALSE),"Rel_size"])
})
apply(t[6:13], 2, function(x){
colnames(x)
print(summary(x))
w.mean(x[which(is.na(x)== FALSE)], t[which(is.na(x)== FALSE),"Rel_size"])
})
apply(t[6:13], 2, function(x){
colnames(x)
# print(summary(x))
# w.mean(x[which(is.na(x)== FALSE)], t[which(is.na(x)== FALSE),"Rel_size"])
})
apply(t[6:13], 2, function(x){
names(x)
# print(summary(x))
# w.mean(x[which(is.na(x)== FALSE)], t[which(is.na(x)== FALSE),"Rel_size"])
})
apply(t[6:13], 2, function(x){
print (names(x))
print(summary(x))
w.mean(x[which(is.na(x)== FALSE)], t[which(is.na(x)== FALSE),"Rel_size"])
})
apply(t[6:13], 2, function(x){
w.mean(x[which(is.na(x)== FALSE)], t[which(is.na(x)== FALSE),"Rel_size"])
})
sapply(t[6:13], summary)
sapply(t[6:13], summary)
apply(t[6:13], 2, function(x){
w.mean(x[which(is.na(x)== FALSE)], t[which(is.na(x)== FALSE),"Rel_size"])
})
t$Genes_per_Mb<-t$Gene/t$`Size_(Mb)`
summary(t$Genes_per_Mb)
summary(t$Genes_per_Mb[1:24])
t$Pseudogene_per_Mb<-t$Pseudogene/t$`Size_(Mb)`
summary(t$Pseudogene_per_Mb)
summary(t$Pseudogene_per_Mb[1:24])
View(t)
t$ratio_gene_pseud=t$Genes_per_Mb/t$Pseudogene_per_Mb
summary(t$Genes_per_Mb[1:14])
View(t)
summary(t$Genes_per_Mb[1:24])
summary(t$ratio_gene_pseud[1:24])
p1<-ggplot(t)+geom_boxplot(aes(x = Name , y = ratio_gene_pseud))+labs(title  ="Genedens./Pseudogenedens." , y = "Gd/Pd", x = "Chromosome")+ theme(plot.title = element_text(hjust = 0.5), legend.position = 'none')
p1
p1<-ggplot(classTraits)+geom_boxplot(aes(x = factor(1) , y = height , fill = gender))+labs(title  ="Height analysis" , y = "Height (cm)", x = "Gender")+ theme(plot.title = element_text(hjust = 0.5), legend.position = 'none')
p1<-ggplot(t)+geom_boxplot(aes(x = factor(1) , y = ratio_gene_pseud))+labs(title  ="Genedens./Pseudogenedens." , y = "Gd/Pd", x = "Chromosome")+ theme(plot.title = element_text(hjust = 0.5), legend.position = 'none')
p1
boxplot(t[,1:18])
boxplot(t])
boxplot(t)
boxplot(t$ratio_gene_pseud)
require(reshape2)
melt(t)
melt(t[6:18])
ggplot(data = melt(t[6:18]), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))
ggplot(data = melt(t[14:18]), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))
ggplot(data = melt(t[1:24,14:18]), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))
ggplot(data = melt(t[1:24,15:18]), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))
ggplot(data = melt(t[1:24,15:18]), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+grid.arrange(.~variable)
melt(t[1:24,15:18]
)
ggplot(data = melt(t[1:24,15:18]), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+grid.arrange(variable~.)
ggplot(data = melt(t[1:24,15:18]), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+facet_grid(variable.~)
ggplot(data = melt(t[1:24,15:18]), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+facet_grid(variable~.)
ggplot(data = melt(t[1:24,15:18]), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+facet_grid(.~variable)
ggplot(data = melt(t[1:24,15:18]), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+facet_grid(.~variable, scales = 'free')
ggplot(data = melt(t[1:24,15:18]), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+facet_grid(.~variable, scales = 'free', as.table = F)
ggplot(data = melt(t[1:24,15:18]), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+facet_grid(.~variable, scales = 'free_y')
ggplot(data = melt(t[1:24,15:18]), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+facet_grid(.~variable, scales = 'free')
ggplot(data = melt(t[1:24,15:18]), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+facet_grid(.~variable, scales = 'free_y')
ggplot(data = melt(t[1:24,15:18]), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+facet_grid(.~variable, scales = 'free')
ggplot(data = melt(t[1:24,15:18]), aes(x=variable, y=value)) + geom_boxplot(aes(fill=variable))+facet_grid(variable~., scales = 'free')
ggplot(data = melt(t[1:24,15:18]), aes(x=factor(1), y=value)) + geom_boxplot(aes(fill=variable))+facet_grid(variable~., scales = 'free')
ggplot(data = melt(t[1:24,15:18]), aes(x=factor(1), y=value)) + geom_boxplot(aes(fill=variable))+facet_grid(.~variable, scales = 'free')
ggplot(data = melt(t[1:24,15:18]), aes(x=factor(1), y=value)) + geom_boxplot(aes(fill=variable))+facet_grid(variable~., scales = 'free')
ggplot(data = melt(t[1:24,15:18]), aes(x=factor(1), y=value)) + geom_boxplot(aes(fill=variable))+facet_grid(variable~., scales = 'free')+xlab("")
ggplot(data = melt(t[1:24,15:18]), aes(x=factor(1), y=value)) + geom_boxplot(aes(fill=variable))+facet_grid(variable~., scales = 'free')+xlab("")+theme(axis.text.x = NA)
ggplot(data = melt(t[1:24,15:18]), aes(x=factor(1), y=value)) +
geom_boxplot(aes(fill=variable))+
facet_grid(variable~., scales = 'free')+
xlab("")+
theme(axis.text.x=element_blank())
p1<-ggplot(t)+geom_boxplot(aes(x = factor(1) , y = ratio_gene_pseud))+labs(title  ="Genedens./Pseudogenedens." , y = "Gd/Pd", x = "Chromosome")+ theme(plot.title = element_text(hjust = 0.5), legend.position = 'none')
ggplot(data = melt(t[1:24,15:18]), aes(x=factor(1), y=value)) +
geom_boxplot(aes(fill=variable))+
facet_wrap(variable~., nrow = 2, scales = 'free')+
xlab("")+
theme(axis.text.x=element_blank())
ggplot(data = melt(t[1:24,15:18]), aes(x=factor(1), y=value)) +
geom_boxplot(aes(fill=variable))+
facet_wrap(variable~.,  scales = 'free')+
xlab("")+
theme(axis.text.x=element_blank())
ggplot(data = melt(t[1:24,15:18]), aes(x=factor(1), y=value)) +
geom_boxplot(aes(fill=variable))+
facet_wrap(variable~,  scales = 'free')+
xlab("")+
theme(axis.text.x=element_blank())
ggplot(data = melt(t[1:24,15:18]), aes(x=factor(1), y=value)) +
geom_boxplot(aes(fill=variable))+
facet_wrap(variable~,  scales = 'free')+
xlab("")+
theme(axis.text.x=element_blank())
ggplot(data = melt(t[1:24,15:18]), aes(x=factor(1), y=value)) +
geom_boxplot(aes(fill=variable))+
facet_wrap(variable~.,  scales = 'free')+
xlab("")+
theme(axis.text.x=element_blank())
ggplot(data = melt(t[1:24,15:18]), aes(x=factor(1), y=value)) +
geom_boxplot(aes(fill=variable))+
facet_wrap(.~variable,  scales = 'free')+
xlab("")+
theme(axis.text.x=element_blank())
dbinom(4, 12, 0.2)
rbinom(4, 200, 0.6)
rbinom(1, 200, 0.6)
rbinom(100, 200, 0.6)
dpois(2, 0.5)
ppois(3, 3)
ppois(1, 2, lower=F)
rpois(200, 4.3)
dpois(0, 6)
ppois(2m 4m lower=F)
ppois(2, 4, lower=F)
qpois(1-0.055, 2)
1500/1000000
Mistakes<-1500/1000000
lambda<-1000000*0.001
ppois(1500, lambda, lower =F )
qpois(0.93,0.001)
