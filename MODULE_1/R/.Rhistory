# }
# library(ggplot2)
# library(viridis)
# ggplot() + geom_point(aes(x = c(1:10000), y = output, color = c(1:10000)))+ scale_color_viridis(option = 'D')
"\""
paste0(c, "\"",e)
paste0(c,"",e)
paste0(c,"\"",e)
e
for (i in (0:(trunc(max_step/10, 0)+1))){
cat(sprintf("%-10d", i))
}
camel_race_repeat<- function (racer = 'Camel', participants = 4, max_step = 39)
{
if (participants >= max_step){
cat (sprintf('You have made a mistake, the number of %ss will now be reduced to %d \n', racer, max_step-1))
participants <- max_step-1
}
values <-sample (2:max_step,participants);
cat("\n");
leader_num <- which.max( values );
cat( sprintf( "%s %d leading the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
cat("\n");
i <-1
repeat{
cat( paste( paste( rep( "-", values[i]-2), collapse="" ), ">",values[i],collapse="",sep=""), "\n");
i <- i+1
if (i > participants){break}
}
cat(paste( rep( 0:9, trunc(max_step/10, 0)+1 ), collapse=""),"\n");
c<-""
e<-""
for (i in (0:(trunc(max_step/10, 0)+1))){
cat(sprintf("%-10d", i))
}
cat("\n");
}
camel_race_repeat()
camel_race_repeat<- function (racer = 'Camel', participants = 4, max_step = 39)
{
if (participants >= max_step){
cat (sprintf('You have made a mistake, the number of %ss will now be reduced to %d \n', racer, max_step-1))
participants <- max_step-1
}
values <-sample (2:max_step,participants);
cat("\n");
leader_num <- which.max( values );
cat( sprintf( "%s %d leading the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
if (leader_num == max_step){
cat( sprintf( "%s %d won the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
}
cat("\n");
i <-1
repeat{
cat( paste( paste( rep( "-", values[i]-2), collapse="" ), ">",values[i],collapse="",sep=""), "\n");
i <- i+1
if (i > participants){break}
}
cat(paste( rep( 0:9, trunc(max_step/10, 0)+1 ), collapse=""),"\n");
c<-""
e<-""
for (i in (0:(trunc(max_step/10, 0)+1))){
cat(sprintf("%-10d", i))
}
cat("\n");
}
camel_race_repeat()
camel_race_repeat('Elephant', 10, 10)
max_step = 39
max_step <- 39
cat(paste( rep( 0:9, trunc(max_step/10, 0)+1 ), collapse=""),"\n");
c<-""
e<-""
for (i in (0:(trunc(max_step/10, 0)+1))){
cat(sprintf("%-10d", i))
}
cat("\n");
cat(paste( rep( 0:9, trunc(max_step/10, 0)+1 ), collapse=""),"\n");
c<-""
e<-""
for (i in (0:(trunc(max_step/10, 0)))){
cat(sprintf("%-10d", i))
}
cat("\n");
camel_race_repeat('Elephant', 10, 10)
camel_race_repeat<- function (racer = 'Camel', participants = 4, max_step = 39)
{
if (participants >= max_step){
cat (sprintf('You have made a mistake, the number of %ss will now be reduced to %d \n', racer, max_step-1))
participants <- max_step-1
}
values <-sample (2:max_step,participants);
cat("\n");
leader_num <- which.max( values );
cat( sprintf( "%s %d leading the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
if (leader_num == max_step){
cat( sprintf( "%s %d won the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
}
cat("\n");
i <-1
repeat{
cat( paste( paste( rep( "-", values[i]-2), collapse="" ), ">",values[i],collapse="",sep=""), "\n");
i <- i+1
if (i > participants){break}
}
cat(paste( rep( 0:9, trunc(max_step/10, 0)+1 ), collapse=""),"\n");
c<-""
e<-""
for (i in (0:(trunc(max_step/10, 0)))){
cat(sprintf("%-10d", i))
}
cat("\n");
}
camel_race_repeat('Elephant', 10, 10)
camel_race_repeat<- function (racer = 'Camel', participants = 4, max_step = 39)
{
if (participants >= max_step){
cat (sprintf('You have made a mistake, the number of %ss will now be reduced to %d \n', racer, max_step-1))
participants <- max_step-1
}
values <-sample (2:max_step,participants);
cat("\n");
leader_num <- which.max( values );
cat( sprintf( "%s %d leading the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
if (leader_num == max_step){
cat( sprintf( "%s %d won the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
}
cat("\n");
i <-1
repeat{
cat( paste( paste( rep( "-", values[i]-2), collapse="" ), ">",values[i],collapse="",sep=""), "\n");
i <- i+1
if (i > participants){break}
}
cat(paste( rep( 0:9, trunc(max_step/10, 0) ), collapse=""),"\n");
c<-""
e<-""
for (i in (0:(trunc(max_step/10, 0)))){
cat(sprintf("%-10d", i))
}
cat("\n");
}
camel_race_repeat('Elephant', 10, 10)
camel_race_repeat<- function (racer = 'Camel', participants = 4, max_step = 39)
{
if (participants >= max_step){
cat (sprintf('You have made a mistake, the number of %ss will now be reduced to %d \n', racer, max_step-1))
participants <- max_step-1
}
values <-sample (2:max_step,participants);
cat("\n");
leader_num <- which.max( values );
cat( sprintf( "%s %d leading the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
if (leader_num == max_step){
cat( sprintf( "%s %d won the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
}
cat("\n");
i <-1
repeat{
cat( paste( paste( rep( "-", values[i]-2), collapse="" ), ">",values[i],collapse="",sep=""), "\n");
i <- i+1
if (i > participants){break}
}
cat(paste( rep( 0:9, trunc(max_step/10, 0)+1 ), collapse=""),"\n");
c<-""
e<-""
for (i in (0:(trunc(max_step/10, 0)))){
cat(sprintf("%-10d", i))
}
cat("\n");
}
camel_race_repeat('Elephant', 10, 10)
camel_race_repeat('Elephant', 10, 39)
camel_race_repeat('Elephant', 39, 39)
camel_race_repeat<- function (racer = 'Camel', participants = 4, max_step = 39)
{
if (participants >= max_step){
cat (sprintf('You have made a mistake, the number of %ss will now be reduced to %d \n', racer, max_step-1))
participants <- max_step-1
}
values <-sample (2:max_step,participants);
cat("\n");
leader_num <- which.max( values );
cat( sprintf( "%s %d leading the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
if (values[leader_num] == max_step){
cat( sprintf( "%s %d won the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
}
cat("\n");
i <-1
repeat{
cat( paste( paste( rep( "-", values[i]-2), collapse="" ), ">",values[i],collapse="",sep=""), "\n");
i <- i+1
if (i > participants){break}
}
cat(paste( rep( 0:9, trunc(max_step/10, 0)+1 ), collapse=""),"\n");
c<-""
e<-""
for (i in (0:(trunc(max_step/10, 0)))){
cat(sprintf("%-10d", i))
}
cat("\n");
}
camel_race_repeat('Elephant', 39, 39)
camel_race_repeat<- function (racer = 'Camel', participants = 4, max_step = 39)
{
if (participants >= max_step){
cat (sprintf('You have made a mistake, the number of %ss will now be reduced to %d \n', racer, max_step-1))
participants <- max_step-1
}
values <-sample (2:max_step,participants);
cat("\n");
leader_num <- which.max( values );
if (values[leader_num] == max_step){
cat( sprintf( "%s %d won the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
} else {
cat( sprintf( "%s %d leading the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
}
cat("\n");
i <-1
repeat{
cat( paste( paste( rep( "-", values[i]-2), collapse="" ), ">",values[i],collapse="",sep=""), "\n");
i <- i+1
if (i > participants){break}
}
cat(paste( rep( 0:9, trunc(max_step/10, 0)+1 ), collapse=""),"\n");
c<-""
e<-""
for (i in (0:(trunc(max_step/10, 0)))){
cat(sprintf("%-10d", i))
}
cat("\n");
}
camel_race_repeat('Elephant', 39, 39)
camel_race_repeat<- function (racer = 'Camel', participants = 4, max_step = 39)
{
if (participants >= max_step){
cat (sprintf('You have made a mistake, the number of %ss will now be reduced to %d \n', racer, max_step-1))
participants <- max_step-1
}
values <-sample (2:max_step,participants);
cat("\n");
leader_num <- which.max( values );
if (values[leader_num] == max_step){
cat( sprintf( "%s %d won the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
} else {
cat( sprintf( "%s %d leading the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
}
cat("\n");
i <-1
repeat{
cat( paste( paste( rep( "-", values[i]-4), collapse="" ), "くコ:彡",values[i],collapse="",sep=""), "\n");
i <- i+1
if (i > participants){break}
}
cat(paste( rep( 0:9, trunc(max_step/10, 0)+1 ), collapse=""),"\n");
c<-""
e<-""
for (i in (0:(trunc(max_step/10, 0)))){
cat(sprintf("%-10d", i))
}
cat("\n");
}
camel_race_repeat('Elephant', 38, 39)
rep( "-", values[i]-4)
camel_race_repeat<- function (racer = 'Camel', participants = 4, max_step = 39)
{
if (participants >= max_step){
cat (sprintf('You have made a mistake, the number of %ss will now be reduced to %d \n', racer, max_step-1))
participants <- max_step-1
}
values <-sample (2:max_step,participants);
cat("\n");
leader_num <- which.max( values );
if (values[leader_num] == max_step){
cat( sprintf( "%s %d won the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
} else {
cat( sprintf( "%s %d leading the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
}
cat("\n");
i <-1
repeat{
cat( paste( paste( rep( "-", values[i]-4), collapse="" ), "<",values[i],collapse="",sep=""), "\n");
i <- i+1
if (i > participants){break}
}
cat(paste( rep( 0:9, trunc(max_step/10, 0)+1 ), collapse=""),"\n");
c<-""
e<-""
for (i in (0:(trunc(max_step/10, 0)))){
cat(sprintf("%-10d", i))
}
cat("\n");
}
camel_race_repeat('Elephant', 38, 39)
camel_race_repeat<- function (racer = 'Camel', participants = 4, max_step = 39)
{
if (participants >= max_step){
cat (sprintf('You have made a mistake, the number of %ss will now be reduced to %d \n', racer, max_step-1))
participants <- max_step-1
}
values <-sample (2:max_step,participants);
cat("\n");
leader_num <- which.max( values );
if (values[leader_num] == max_step){
cat( sprintf( "%s %d won the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
} else {
cat( sprintf( "%s %d leading the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
}
cat("\n");
i <-1
repeat{
cat( paste( paste( rep( "-", values[i]-2), collapse="" ), "くコ:彡",values[i],collapse="",sep=""), "\n");
i <- i+1
if (i > participants){break}
}
cat(paste( rep( 0:9, trunc(max_step/10, 0)+1 ), collapse=""),"\n");
c<-""
e<-""
for (i in (0:(trunc(max_step/10, 0)))){
cat(sprintf("%-10d", i))
}
cat("\n");
}
くコ:彡
camel_race_repeat('Elephant', 38, 39)
camel_race_repeat<- function (racer = 'Camel', participants = 4, max_step = 39)
{
if (participants >= max_step){
cat (sprintf('You have made a mistake, the number of %ss will now be reduced to %d \n', racer, max_step-1))
participants <- max_step-1
}
values <-sample (2:max_step,participants);
cat("\n");
leader_num <- which.max( values );
if (values[leader_num] == max_step){
cat( sprintf( "%s %d won the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
} else {
cat( sprintf( "%s %d leading the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
}
cat("\n");
i <-1
repeat{
cat( paste( paste( rep( "-", values[i]-2), collapse="" ), "><>",values[i],collapse="",sep=""), "\n");
i <- i+1
if (i > participants){break}
}
cat(paste( rep( 0:9, trunc(max_step/10, 0)+1 ), collapse=""),"\n");
c<-""
e<-""
for (i in (0:(trunc(max_step/10, 0)))){
cat(sprintf("%-10d", i))
}
cat("\n");
}
camel_race_repeat('Elephant', 38, 39)
camel_race_repeat<- function (racer = 'Camel', participants = 4, max_step = 39)
{
if (participants >= max_step){
cat (sprintf('You have made a mistake, the number of %ss will now be reduced to %d \n', racer, max_step-1))
participants <- max_step-1
}
values <-sample (2:max_step,participants);
cat("\n");
leader_num <- which.max( values );
if (values[leader_num] == max_step){
cat( sprintf( "%s %d won the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
} else {
cat( sprintf( "%s %d leading the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
}
cat("\n");
i <-1
repeat{
cat( paste( paste( rep( "~", values[i]-2), collapse="" ), "><>",values[i],collapse="",sep=""), "\n");
i <- i+1
if (i > participants){break}
}
cat(paste( rep( 0:9, trunc(max_step/10, 0)+1 ), collapse=""),"\n");
c<-""
e<-""
for (i in (0:(trunc(max_step/10, 0)))){
cat(sprintf("%-10d", i))
}
cat("\n");
}
camel_race_repeat('Elephant', 38, 39)
camel_race_repeat<- function (racer = 'Camel', participants = 4, max_step = 39)
{
if (participants >= max_step){
cat (sprintf('You have made a mistake, the number of %ss will now be reduced to %d \n', racer, max_step-1))
participants <- max_step-1
}
values <-sample (3:max_step,participants);
cat("\n");
leader_num <- which.max( values );
if (values[leader_num] == max_step){
cat( sprintf( "%s %d won the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
} else {
cat( sprintf( "%s %d leading the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
}
cat("\n");
i <-1
repeat{
cat( paste( paste( rep( "~", values[i]-3), collapse="" ), "><>",values[i],collapse="",sep=""), "\n");
i <- i+1
if (i > participants){break}
}
cat(paste( rep( 0:9, trunc(max_step/10, 0)+1 ), collapse=""),"\n");
c<-""
e<-""
for (i in (0:(trunc(max_step/10, 0)))){
cat(sprintf("%-10d", i))
}
cat("\n");
}
camel_race_repeat('Elephant', 38, 39)
camel_race_repeat<- function (racer = 'Camel', participants = 4, max_step = 39)
{
if (participants >= max_step-2){
cat (sprintf('You have made a mistake, the number of %ss will now be reduced to %d \n', racer, max_step-2))
participants <- max_step-2
}
values <-sample (3:max_step,participants);
cat("\n");
leader_num <- which.max( values );
if (values[leader_num] == max_step){
cat( sprintf( "%s %d won the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
} else {
cat( sprintf( "%s %d leading the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
}
cat("\n");
i <-1
repeat{
cat( paste( paste( rep( "~", values[i]-3), collapse="" ), "><>",values[i],collapse="",sep=""), "\n");
i <- i+1
if (i > participants){break}
}
cat(paste( rep( 0:9, trunc(max_step/10, 0)+1 ), collapse=""),"\n");
c<-""
e<-""
for (i in (0:(trunc(max_step/10, 0)))){
cat(sprintf("%-10d", i))
}
cat("\n");
}
camel_race_repeat('Elephant', 38, 39)
camel_race_repeat('Elephant', 4, 10)
fish_race<- function (racer = 'Camel', participants = 4, max_step = 39)
{
if (participants >= max_step-2){
cat (sprintf('You have made a mistake, the number of %ss will now be reduced to %d \n', racer, max_step-2))
participants <- max_step-2
}
values <-sample (3:max_step,participants);
cat("\n");
leader_num <- which.max( values );
if (values[leader_num] == max_step){
cat( sprintf( "%s %d won the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
} else {
cat( sprintf( "%s %d leading the race!! At step: %d !!\n", racer, leader_num, values[ leader_num ]));
}
cat("\n");
i <-1
repeat{
cat( paste( paste( rep( "~", values[i]-3), collapse="" ), "><>",values[i],collapse="",sep=""), "\n");
i <- i+1
if (i > participants){break}
}
cat(paste( rep( 0:9, trunc(max_step/10, 0)+1 ), collapse=""),"\n");
c<-""
e<-""
for (i in (0:(trunc(max_step/10, 0)))){
cat(sprintf("%-10d", i))
}
cat("\n");
}
fish_race('Tuna', 4, 10)
fish_race('Tuna', 10, 20)
output<-numeric(10000)
for(n in 1:10000){
output[n]<-mean(rnorm(n, 0, 1))
}
plot(output)
legend(bottomright = 'Hi')
legend(x = 'Hi')
plot(output)
legend(x = 'Hi')
plot(output)
legend(x = 'Hi')
plot(output)
legend(y = 'Hi')
plot(output)
legend(x = 'Hiho' , y = 'Hi')
plot(output)
plot(output) legend(legend = 'Step')
plot(output)
legend(legend = 'Step')
source("http://www.bioconductor.org/biocLite.R")
biocLite('ALL')
library('ALL')
data('ALL')
source("http://www.bioconductor.org/biocLite.R")
ALL$mol.biol
eset <-ALL[,ALL$mol.biol %in% c('BCR/ABL', 'ALL1/AF4')]
eset
exprs(eset[1:2,])
exprs(eset[,])
heatmap(exprs(eset[1_10,]))
heatmap(exprs(eset[1:10,]))
heatmap(exprs(eset[,]))
heatmap(exprs(eset[,]))
heatmap(exprs(eset[1:100,]))
heatmap(exprs(eset[1:100,]))
